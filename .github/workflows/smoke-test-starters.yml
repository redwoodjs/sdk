name: Starter Smoke Tests

on:
  push:
    branches:
      - main
    paths-ignore:
      - "docs/**"
  pull_request:
    branches:
      - main
    paths-ignore:
      - "docs/**"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

env:
  CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
  CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

jobs:
  smoke-test:
    name: ${{ matrix.starter }} starter - ${{ matrix.os }} - ${{ matrix.package-manager }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        starter: [minimal, standard]
        os: [ubuntu-latest] # TODO: Re-enable windows-latest after fixing Windows path issues (see issue #696)
        package-manager: [pnpm, npm, yarn, yarn-classic]

    # context(justinvdm, 2025-05-12):
    # Only run this job for PRs from the same repository and pushes to main
    # For security, GH won't expose secrets for fork PRs
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name == github.repository

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install dependencies
        shell: bash
        run: |
          corepack enable
          if [ "${{ matrix.package-manager }}" = "yarn" ]; then
            corepack prepare yarn@stable --activate
          elif [ "${{ matrix.package-manager }}" = "yarn-classic" ]; then
            npm i -g yarn@1.22.19 --force
          fi
          pnpm install

      - name: Generate lockfiles
        shell: bash
        run: |
          if [ "${{ matrix.package-manager }}" = "yarn" ] || [ "${{ matrix.package-manager }}" = "yarn-classic" ]; then
            for starter in starters/*; do
              if [ -d "$starter" ]; then
                echo "Generating lockfile for $starter"
                # Create temporary directory to isolate from root packageManager field
                temp_dir=$(mktemp -d)
                cp -r "$starter"/* "$temp_dir/"
                cp "$starter"/.gitignore "$temp_dir/" 2>/dev/null || true
                if [ "${{ matrix.package-manager }}" = "yarn" ]; then
                  (cd "$temp_dir" && yarn install --mode=update-lockfile)
                else
                  # For yarn-classic (v1), just run yarn install to generate lockfile
                  (cd "$temp_dir" && yarn install)
                fi
                # Copy lockfile back to original starter directory
                if [ -f "$temp_dir/yarn.lock" ]; then
                  cp "$temp_dir/yarn.lock" "$starter/"
                fi
                # Cleanup
                rm -rf "$temp_dir"
              fi
            done
          fi

      - name: Run smoke test
        shell: bash
        run: |
          # Create artifact directory
          mkdir -p smoke-test-artifacts/${{ matrix.starter }}

          # Build SDK
          cd sdk
          pnpm build

          # Run the starter test
          # todo(justinvdm, 11 Aug 2025): Fix style test flakiness
          pnpm smoke-test --path="../starters/${{ matrix.starter }}" --artifact-dir="../smoke-test-artifacts/${{ matrix.starter }}" --sync --copy-project --skip-style-tests --package-manager=${{ matrix.package-manager }}
        env:
          CHROME_BIN: ${{ steps.setup-chrome.outputs.chrome-path }}

      - name: Upload starter artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: smoke-test-artifacts-${{ matrix.starter }}-${{ matrix.os }}-${{ matrix.package-manager }}
          path: smoke-test-artifacts/${{ matrix.starter }}
          retention-days: 7
