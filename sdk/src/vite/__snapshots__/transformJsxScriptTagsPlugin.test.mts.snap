// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`transformJsxScriptTagsCode > adds nonce to script tags with src attribute and imports requestInfo 1`] = `
"import { requestInfo } from "rwsdk/worker";

      jsx("script", {
        src: "/src/client.tsx",
        type: "module",
          nonce: requestInfo.rw.nonce
    })
    "
`;

exports[`transformJsxScriptTagsCode > adds nonce to script tags with string literal children 1`] = `
"import { requestInfo } from "rwsdk/worker";

      jsx("script", {
        type: "module",
        children: "console.log('hello world')",
          nonce: requestInfo.rw.nonce
    })
    "
`;

exports[`transformJsxScriptTagsCode > adds requestInfo to existing SDK import if module already imported 1`] = `
"
      import { foo } from 'bar';
      import { someOtherThing, requestInfo } from "rwsdk/worker";
      
      jsx("script", {
        type: "module",
        children: "console.log('hello world')",
          nonce: requestInfo.rw.nonce
    })
    "
`;

exports[`transformJsxScriptTagsCode > handles paths not found in manifest 1`] = `
"import { requestInfo } from "rwsdk/worker";

      jsx("script", {
        src: "/src/non-existent.js",
        type: "module",
          nonce: requestInfo.rw.nonce
    })
    "
`;

exports[`transformJsxScriptTagsCode > injects stylesheet links for scripts with src 1`] = `
"
      import { jsx } from 'react/jsx-runtime';
import { requestInfo } from "rwsdk/worker";

      function Document() {
        return jsx("body", { children: [
          jsx("script", { src: "/src/client.tsx",
              nonce: requestInfo.rw.nonce
        })
        ]});
      }
    "
`;

exports[`transformJsxScriptTagsCode > transforms inline scripts with dynamic imports 1`] = `
"import { requestInfo } from "rwsdk/worker";

      jsx("script", {
        type: "module",
        children: "import(\\"/assets/client-a1b2c3d4.js\\").then(module => { console.log(module); })",
          nonce: requestInfo.rw.nonce
    })
    "
`;

exports[`transformJsxScriptTagsCode > transforms inline scripts with multiline content 1`] = `
"import { requestInfo } from "rwsdk/worker";

      jsx("script", {
        type: "module",
        children: \`
          // Some comments here
          const init = async () => {
            await import("/assets/entry-e5f6g7h8.js");
            console.log('initialized');
          };
          init();
        \`,
          nonce: requestInfo.rw.nonce
    })
    "
`;

exports[`transformJsxScriptTagsCode > transforms inline scripts with type=module 1`] = `
"import { requestInfo } from "rwsdk/worker";

      jsx("script", { type: "module", children: "import(\\"/assets/client-a1b2c3d4.js\\")",
          nonce: requestInfo.rw.nonce
    })
    "
`;

exports[`transformJsxScriptTagsCode > transforms link href attributes with modulepreload rel 1`] = `
"
      jsx("link", {
        href: "/assets/client-a1b2c3d4.js",
        rel: "modulepreload"
      })
    "
`;

exports[`transformJsxScriptTagsCode > transforms link href attributes with preload rel 1`] = `
"
      jsx("link", {
        rel: "preload",
        href: "/assets/client-a1b2c3d4.js",
        as: "script"
      })
    "
`;

exports[`transformJsxScriptTagsCode > transforms multiple imports in the same inline script 1`] = `
"import { requestInfo } from "rwsdk/worker";

      jsx("script", {
        type: "module",
        children: \`
          import("/assets/client-a1b2c3d4.js");
          import("/assets/entry-e5f6g7h8.js");
        \`,
          nonce: requestInfo.rw.nonce
    })
    "
`;

exports[`transformJsxScriptTagsCode > transforms real-world Document component example 1`] = `
"import { requestInfo } from "rwsdk/worker";

      jsx("html", {
        lang: "en",
        children: [
          jsx("head", {
            children: [
              jsx("meta", { charSet: "utf-8" }),
              jsx("meta", { name: "viewport", content: "width=device-width, initial-scale=1" }),
              jsx("title", { children: "@redwoodjs/starter-standard" }),
              jsx("link", { rel: "modulepreload", href: "/assets/client-a1b2c3d4.js", as: "script" })
            ]
          }),
          jsx("body", {
            children: [
              jsx("div", { id: "root", children: props.children }),
              jsx("script", { children: "import(\\"/assets/client-a1b2c3d4.js\\")",
                  nonce: requestInfo.rw.nonce
            })
            ]
          })
        ]
      })
    "
`;

exports[`transformJsxScriptTagsCode > transforms script src attributes in JSX 1`] = `
"import { requestInfo } from "rwsdk/worker";

      jsx("script", {
        src: "/assets/client-a1b2c3d4.js",
        type: "module",
          nonce: requestInfo.rw.nonce
    })
    "
`;

exports[`transformJsxScriptTagsCode > uses existing requestInfo import if already present 1`] = `
"
      import { foo } from 'bar';
      import { requestInfo, someOtherThing } from "rwsdk/worker";
      
      jsx("script", {
        type: "module",
        children: "console.log('hello world')",
          nonce: requestInfo.rw.nonce
    })
    "
`;

exports[`transformJsxScriptTagsCode > works in development mode without a manifest 1`] = `
"import { requestInfo } from "rwsdk/worker";

      jsx("script", {
        src: "/src/client.tsx",
        type: "module",
          nonce: requestInfo.rw.nonce
    })
    "
`;
